# focus window
fn - h : chunkc tiling::window --focus west
fn - j : chunkc tiling::window --focus south
fn - k : chunkc tiling::window --focus north
fn - l : chunkc tiling::window --focus east

# swap window
ctrl + cmd - h : chunkc tiling::window --swap west
ctrl + cmd - j : chunkc tiling::window --swap south
ctrl + cmd - k : chunkc tiling::window --swap north
ctrl + cmd - l : chunkc tiling::window --swap east

# move window
fn + shift - h : chunkc tiling::window --warp west
fn + shift - j : chunkc tiling::window --warp south
fn + shift - k : chunkc tiling::window --warp north
fn + shift - l : chunkc tiling::window --warp east

# send window to desktop
fn - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
# fn + cmd - z : chunkc tiling::window --send-to-desktop prev
# fn + cmd - c : chunkc tiling::window --send-to-desktop next
# fn + cmd - 1 : chunkc tiling::window --send-to-desktop 1
# fn + cmd - 2 : chunkc tiling::window --send-to-desktop 2
# fn + cmd - 3 : chunkc tiling::window --send-to-desktop 3
# fn + cmd - 4 : chunkc tiling::window --send-to-desktop 4
# fn + cmd - 5 : chunkc tiling::window --send-to-desktop 5
# fn + cmd - 6 : chunkc tiling::window --send-to-desktop 6

# increase region size
fn + cmd - h : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
fn + cmd - j : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
fn + cmd - k : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
fn + cmd - l : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east
# decrease region size
fn + shift + cmd - h : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
fn + shift + cmd - j : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
fn + shift + cmd - k : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
fn + shift + cmd - l : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east
# equalize size of windows
fn + cmd - 0 : chunkc tiling::desktop --equalize

# set insertion point for focused container
# ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
# ctrl + alt - h : chunkc tiling::window --use-insertion-point west
# ctrl + alt - j : chunkc tiling::window --use-insertion-point south
# ctrl + alt - k : chunkc tiling::window --use-insertion-point north
# ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
fn - r : chunkc tiling::desktop --rotate 90
# mirror tree y-axis
fn + shift - y : chunkc tiling::desktop --mirror vertical
# mirror tree x-axis
fn + shift - x : chunkc tiling::desktop --mirror horizontal
# toggle window fullscreen
fn - f : chunkc tiling::window --toggle fullscreen
# toggle window parent zoom
fn - p : chunkc tiling::window --toggle parent
# toggle window split type
fn - s : chunkc tiling::window --toggle split
# float / unfloat window
fn - t : chunkc tiling::window --toggle float

# float next window to be tiled
shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
ctrl + cmd - b : chunkc tiling::desktop --layout bsp
ctrl + cmd - m : chunkc tiling::desktop --layout monocle
ctrl + cmd - f : chunkc tiling::desktop --layout float

ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

# move floating windows / windows on a floating space
# shift + alt - up     : chunkc tiling::window --warp-floating fullscreen
# shift + alt - left   : chunkc tiling::window --warp-floating left
# shift + alt - right  : chunkc tiling::window --warp-floating right
# shift + cmd - left   : chunkc tiling::window --warp-floating top-left
# shift + cmd - right  : chunkc tiling::window --warp-floating top-right
# shift + ctrl - left  : chunkc tiling::window --warp-floating bottom-left
# shift + ctrl - right : chunkc tiling::window --warp-floating bottom-right

# focus monitor
# ctrl + alt - z  : chunkc tiling::monitor -f prev
# ctrl + alt - c  : chunkc tiling::monitor -f next
# ctrl + alt - 1  : chunkc tiling::monitor -f 1
# ctrl + alt - 2  : chunkc tiling::monitor -f 2
# ctrl + alt - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
# ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
# ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
# ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
# ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
# ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# toggle sticky, float and resize to picture-in-picture size
# ctrl + shift - s : chunkc tiling::window --toggle sticky;\
#           chunkc tiling::window --warp-floating pip-right

# toggle desktop offset
# ctrl + shift - a : chunkc tiling::desktop --toggle offset

# toggle window native fullscreen
# shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# cmd - j : chunkc tiling::window --focus prev
# cmd - k : chunkc tiling::window --focus next

#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.


# open terminal, blazingly fast compared to iTerm/Hyper
# cmd - return : open -na /Applications/Kitty.app

# close focused window
# alt - w : chunkc tiling::window --close

